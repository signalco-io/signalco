# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: "[Infra] Deploy"

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string
        description: "The project to deploy"
      packageName:
        required: true
        type: string
        description: "The package name to deploy"
      baseRef:
        required: true
        type: string
        description: "The base branch to deploy to"
      command:
        required: true
        type: string
        description: "The Pulumi command to run - preview, up, destroy, etc."

defaults:
  run:
    working-directory: ./infra

jobs:
  infra-build-and-execute:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: ‚ú® Setup DotNet 9.0.x Environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
        
      - name: ‚ú® Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - uses: pnpm/action-setup@v3
        name: ‚ú® Install pnpm
        with:
          version: 9.2.0

      - name: ‚ú® Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: ‚ú® Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: üì¶Ô∏è Installing dependencies
        run: pnpm i --frozen-lockfile --filter=${{ inputs.project }}

      - name: üîé Determine stack
        shell: bash
        run: |
          if [[ $(echo ${BASE_BRANCH#refs/heads/}) = "main" ]]
          then 
            echo "stack=production" >> $GITHUB_OUTPUT
          else
            echo "stack=${BASE_BRANCH#refs/heads/}" >> $GITHUB_OUTPUT
          fi
        id: extract_branch
        env:
          BASE_BRANCH: ${{ inputs.baseRef }}

      - name: ‚öíÔ∏è Build Infrastructure
        run: pnpm build --filter=${{ inputs.packageName }}

      - name: ‚úã Set up mutex
        id: mutex-setup
        run: |
          pushd ../discrete/Signalco.Discrete.Api.Mutex/node-cli
          npm install
          npm install -g
          npx mutex wait signalcoinfra${{ inputs.command }}${{ inputs.project }}
          popd

      - name: ‚ö° Deploy Infrastructure
        uses: pulumi/actions@v6
        with:
          cloud-url: azblob://states
          command: ${{ inputs.command }}
          stack-name: organization/${{ inputs.project }}/${{ inputs.project }}-${{ steps.extract_branch.outputs.stack }}
          work-dir: ./infra/apps/${{ inputs.project }}
          comment-on-pr: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
          ARM_USE_OIDC: true
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: ‚úã Release mutex
        if: always() && steps.mutex-setup.outcome == 'success'
        run: |
          pushd ../discrete/Signalco.Discrete.Api.Mutex/node-cli
          npm install
          npm install -g
          npx mutex release signalcoinfra${{ inputs.command }}${{ inputs.project }}
          popd
