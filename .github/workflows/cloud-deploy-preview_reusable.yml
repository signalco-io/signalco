# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: "[Cloud] Preview Deploy"

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string
        description: "The project to deploy"
      baseRef:
        required: true
        type: string
        description: "The base branch to deploy to"

defaults:
  run:
    working-directory: ./infra

jobs:
  build-and-preview:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: ✋ Set up mutex
        id: mutex-setup
        run: |
          pushd ../discrete/Signalco.Discrete.Api.Mutex/node-cli
          npm install
          npm install -g
          npx mutex wait signalcoinfrapreview${{ inputs.project }}
          popd

      - name: ✨ Setup DotNet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "7.0.x"

      - name: ✨ Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 'latest'

      - name: ✨ Setup Node LTS
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: pnpm
          cache-dependency-path: ./infra

      - name: 📦️ Installing dependencies
        run: pnpm i --frozen-lockfile

      - name: 🔎 Determine stack
        shell: bash
        run: |
          if [[ $(echo ${BASE_BRANCH#refs/heads/}) = "main" ]]
          then 
            echo "stack=production" >> $GITHUB_OUTPUT
          else
            echo "stack=${BASE_BRANCH#refs/heads/}" >> $GITHUB_OUTPUT
          fi
        id: extract_branch
        env:
          BASE_BRANCH: ${{ inputs.baseRef }}

      - name: ⚡ Preview Deploy Infrastructure
        uses: pulumi/actions@v4
        with:
          command: preview
          stack-name: signalco/${{ inputs.project }}/${{ steps.extract_branch.outputs.stack }}
          work-dir: ./infra/apps/${{ inputs.project }}
          comment-on-pr: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: ✋ Release mutex
        if: always() && steps.mutex-setup.outcome == 'success'
        run: |
          pushd ../discrete/Signalco.Discrete.Api.Mutex/node-cli
          npm install
          npm install -g
          npx mutex release signalcoinfrapreview${{ inputs.project }}
          popd
